x | NA
c(TRUE, FALSE) & NA
c(TRUE, FALSE) | NA
c(TRUE, FALSE) & NA
c(TRUE, FALSE) | NA
length(age | NA) == length(age)
age | NA
length(age | NA) == length(age)
which(age | NA)
age[which(age | NA)]
age[!which(age | NA)]
age[-(which(age | NA))]
age[-(which(age | NA))] <- FALSE
age | NA
which(age | NA)
!which(age | NA)
age
age <- c(18, NA, 25, 71, NA, 45, NA, NA, 18)
which(age | NA)
age[age | NA]
age[age]
age[!NA]
age[!NA]
which(age | NA)
age[!NA]
age[age | NA]
age[!age]
which(age[!age])
which(!age[!age])
age[!age]
which(age[!age] | NA)
which(age[!age] | NA)
which(age)
which(age[!age] | NA)
which(age | NA)
which(age | NA)
which(age[!age] | NA)
age[!age]
as.logical(age[!age])
as.numeric(age[!age])
as.character(age[!age])
as.character(age[!age])
which(age[!age] | NA)
which(as.character(age[!age]) | NA)
which(as.character(age[!age]))
which(age[!age] | NA)
which(age | NA)
age[which(!is.na(age))]
which(age[!age] | NA)
x = 5
x | NA
lenght(x) != 0
length(x) != 0
x = 5
x | NA
length(x) != 0
lenght(age) != 0
length(age) != 0
age | NA
age | NA
length(age | NA) == length(age)
| NA
which(age[length(0)])
age(length(0))
age[length(0)]
which(age[!age] | NA)
which(age | NA)
age[which(age | NA)]
cars
speed <- cars$speed
dist <- cars$dist
which(age[!age] | NA)
cars
install.packages("car")
cars
cars
cars[1]
install.packages("car")
cars
speed
speed <- cars$speed
speed
which(speed >= 15)
which(dist >= 15)
speed <- cars$speed
dist <- cars$dist
which(dist >= 15)
which.min(dist)
speed[which.max(dist)]
which.max(dist)
speed[which.max(dist)]
survey <- read.csv('survey_data.csv')
survey$TVhours
survey[TVhours,]
survey[1,]
survey[,1]
survey[,TVhours]
survey[,'TVhours']
survey[[,'TVhours']]
survey[[,TVhours]]
survey[[TVhours,]]
survey[[TVhours]]
survey[["TVhours"]]
survey["TVhours"]
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
attributes(m)
mx <- matrix(1:6,nrow = 2, ncol = 3)
attributes(m)
attributes(mx)
mx <- matrix(1:6,nrow = 2, ncol = 3)
unlist(attributes(mx), use.names = F)
mx <- matrix(1:6,nrow = 2, ncol = 3)
atr = unlist(attributes(mx), use.names = F)
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx <- t(mx)
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
mx <- t(mx)
mx
atr = unlist(attributes(mx), use.names = F)
for(i in atr[2]){
mx[i,]=rev(mx[i,])
}
mx
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate <- function(m){
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
mx <- t(mx)
mx
atr = unlist(attributes(mx), use.names = F)
for(i in atr[2]){
mx[i,]=rev(mx[i,])
}
mx
atr = unlist(attributes(mx), use.names = F)
atr[1]
atr[2]
mx <- matrix(1:6,nrow = 2, ncol = 3)
atr = unlist(attributes(mx), use.names = F)
atr
rotate <- function(m){
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
mx <- t(mx)
mx
atr = unlist(attributes(mx), use.names = F)
atr
for(i in 0:atr[2]){
mx[i,]=rev(mx[i,])
}
mx
rotate <- function(m){
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
mx <- t(mx)
mx
atr = unlist(attributes(mx), use.names = F)
atr
for(i in 0:atr[1]){
mx[i,]=rev(mx[i,])
}
mx
mx <- matrix(1:6,nrow = 2, ncol = 3)
atr = unlist(attributes(mx), use.names = F)
atr
rotate <- function(m){
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
atr = unlist(attributes(mx), use.names = F)
mx <- t(mx)
for(i in 0:atr[2]){
mx[i,]=rev(mx[i,])
}
mx
rotate <- function(m){
a <- unlist(attributes(mx), use.names = F)
m <- t(m)
for(i in 0:atr[2]){
m[i,]=rev(m[i,])
}
return m
rotate <- function(m){
mx <- matrix(1:6,nrow = 2, ncol = 3)
rotate(mx)
mx
rotate <- function(m){
mx <- matrix(1:6,nrow = 2, ncol = 3)
rotate(mx)
mx
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate <- function(m){
rotate <- function(m){
a <- unlist(attributes(mx), use.names = F)
m <- t(m)
for(i in 0:atr[2]){
m[i,]=rev(m[i,])
return (m)
}
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate(mx)
mx
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
#rotate <- function(m){
#  a <- unlist(attributes(mx), use.names = F)
#  m <- t(m)
#  for(i in 0:atr[2]){
#    m[i,]=rev(m[i,])
#  return (m)
#  }
#}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate(mx)
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
survey["TVhours"]
survey["TVhours"]
survey <- read.csv('survey_data.csv')
survey$TVhours
#rotate <- function(m){
#  a <- unlist(attributes(mx), use.names = F)
#  m <- t(m)
#  for(i in 0:atr[2]){
#    m[i,]=rev(m[i,])
#  return (m)
#  }
#}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
#rotate <- function(m){
#  a <- unlist(attributes(mx), use.names = F)
#  m <- t(m)
#  for(i in 0:atr[2]){
#    m[i,]=rev(m[i,])
#  return (m)
#  }
#}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotatem <- function(m){
a <- unlist(attributes(mx), use.names = F)
m <- t(m)
for(i in 0:atr[2]){
m[i,]=rev(m[i,])
return (m)
}
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate(mx)
mx
rotatem <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:atr[2]){
m[i,]=rev(m[i,])
return (m)
}
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate(mx)
mx
mx
rotate <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:atr[2]){
m[i,]=rev(m[i,])
return (m)
}
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate(mx)
mx
rotate <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:a[2]){
m[i,]=rev(m[i,])
return (m)
}
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate(mx)
mx
rotate <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:a[2]){
m[i,]=rev(m[i,])
return (m)
}
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
my <- rotate(mx)
my
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
attributes(mx)
rotatem <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:a[2]){
m[i,]=rev(m[i,])
return (m)
}
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
attributes(mx)
my <- rotatem(mx)
my
rotate <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:a[2]){
m[i,]=rev(m[i,])
}
return (m)
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
my <- rotate(mx)
my
rotate <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:a[2]){
m[i,]=rev(m[i,])
}
return (m)
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
my <- rotate(mx)
my
# В R нашелся синтаксический сахар.
rotate <- function(m){
t(apply(m, 2, rev))
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
my <- rotate(mx)
my
rotate <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:a[2]){
m[i,]=rev(m[i,])
}
#  return (m)
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
my <- rotate(mx)
my
# В R нашелся синтаксический сахар.
rotate <- function(m){
t(apply(m, 2, rev))
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
my <- rotate(mx)
my
rotate <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:a[2]){
m[i,]=rev(m[i,])
}
return (m)
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
my <- rotate(mx)
my
# В R нашелся синтаксический сахар.
rotate <- function(m){
t(apply(m, 2, rev))
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
my <- rotate(mx)
my
rotate <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:a[2]){
m[i,]=rev(m[i,])
}
return (m)
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate(mx)
rotate <- function(m){
a <- unlist(attributes(m), use.names = F)
m <- t(m)
for(i in 0:a[2]){
m[i,]=rev(m[i,])
}
return (m)
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate(mx)
# В R нашелся синтаксический сахар.
rotate <- function(m){
t(apply(m, 2, rev))
}
mx <- matrix(1:6,nrow = 2, ncol = 3)
mx
rotate(mx)
survey <- read.csv('survey_data.csv')
subset(survey, survey$Rexperience == "Never used", select = c(Program, OperatingSystem))
subset(survey, (survey$Rexperience == "Never used") & survey$TVhours >= 5, select = c(Program, OperatingSystem))
plot(survey$Rexperience)
#plot(survey$Rexperience)
nrow(survey)
subset(survey, (survey$Rexperience == "Never used") & (survey$TVhours >= 5), select = c(Program, OperatingSystem))
survey$Program
class(survey$Program)
survey$Program
length(survey$Program)
survey$Program[-"MISM"]
which(survey$Program != "MISM")
length(which(survey$Program != "MISM"))
length(which(survey$OperatingSystem == "Mac OS X"))
length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)
quantile(length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey), names = F)
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
class(quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)))
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))[1]
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))[2]
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))[1
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))[1]
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))[1]
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))[1][1]
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))[1][2]
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
row(quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)))
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
lapply(nrow(survey), quantile, length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
lapply(nrow(survey), quantile, length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
lapply(nrow(survey), quantile, (length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)))
lapply(nrow(survey), quantile, 0.5)
quantile(nrow(survey), length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
paste("Trial.",1:4,sep ="")
length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)
paste(length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey),"%",sep ="")
percent(length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
percent_format()(length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)
percent_format()(length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
percent_format(length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
runif(length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey))
runif(10)
length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)*100
round(length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)*100,2)
quantile(nrow(survey),length(which(survey$OperatingSystem == "Mac OS X")))
length(which(survey$OperatingSystem == "Mac OS X"))
round(length(which(survey$OperatingSystem == "Mac OS X"))/nrow(survey)*100,2)
length(which(survey$Program != "MISM"))
length(which(survey$Program != "MISM"))
subset(survey, (survey$Program == "MISM") & (survey$Rexperience == "Basic competence"))
length(which(survey$Program == "MISM"))
subset(survey, survey$Program == "MISM")
subset(survey, survey$Program == "MISM", select =  Rexperience)
subset(survey, survey$Program == "MISM")$Rexperience
nrow(subset(survey, survey$Program == "MISM"))
subset(survey, survey$Program == "MISM")$Rexperience
which(subset(survey, survey$Program == "MISM")$Rexperience == "Basic competence")
length(which(subset(survey, survey$Program == "MISM")$Rexperience == "Basic competence"))
round(length(which(subset(survey, survey$Program == "MISM")$Rexperience == "Basic competence"))/nrow(subset(survey, survey$Program == "MISM"))*100,2)
round(length(which(subset(survey, survey$Program == "MISM")$Rexperience == "Basic competence"))/nrow(subset(survey, survey$Program == "MISM"))*100,2)
plot(survey$Rexperience)
x = 94842
x == 94842
#x <- c(94841,94842,94843); names(x)<- as.character(x)
#x <- (x == 94842)
#x
x = 5
x || NA
length(x) != 0
age | NA
age <- c(18, NA, 25, 71, NA, 45, NA, NA, 18)
age | NA
age || NA
age || NA
age || NA
age <- c(NA, NA, 25, 71, NA, 45, NA, NA, 18)
age || NA
