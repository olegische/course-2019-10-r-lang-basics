install.packages("microbenchmark")
sumRange1 <- function(s) {
for(i in 1:length(s)) {
s[i] <- sum(1:i)
}
return(s)
}
microbenchmark(sumRange1(1:100000))
library(microbenchmark)
sumRange3 <- function(s) {
s[1] <- 1
for(i in 2:length(s)) {
s[i] <- apply(s[i], sum, i)
}
return(s)
}
microbenchmark(sumRange1(1:100000))
microbenchmark(sumRange3(1:100000))
sumRange3 <- function(s) {
s[1] <- 1
for(i in 2:length(s)) {
s[i] <- sapply(s[i], sum, i)
}
return(s)
}
microbenchmark(sumRange3(1:100000))
sumRange1 <- function(s) {
for(i in 1:length(s)) {
s[i] <- sum(1:i)
}
return(s)
}
microbenchmark(sumRange1(1:10000))
sumRange3 <- function(s) {
s[1] <- 1
for(i in 2:length(s)) {
s[i] <- sapply(s[i], sum, i)
}
return(s)
}
microbenchmark(sumRange3(1:10000))
sumRange3 <- function(s) {
s[1] <- 1
for(i in 2:length(s)) {
s[i] <- sapply(s[i-1], sum, i)
}
return(s)
}
microbenchmark(sumRange3(1:10000))
microbenchmark(sumRange3(1:10))
sumRange3(1:100)
sumRange2 <- function(s) {
s[1] <- 1
for(i in 2:length(s)) {
s[i] <- s[i-1] + i
}
return(s)
}
sumRange2(1:100)
microbenchmark(sumRange2(1:10000))
sumRange4 <- function(x) {
s=rep(1,x)
for(i in 2:x) {
s[i] <- s[i-1] + i
}
return(s)
}
microbenchmark(sumRange4(1:10000))
microbenchmark(sumRange4(10000))
library(ggplot2)
library(ggplot2)
ggplot(mpg, aes(displ,hwy)) + geom_point()
ggplot(mpg, aes(displ, hwy))+geom_point(col='red')
ggplot(mpg, aes(displ,hwy)) + geom_point() #no
ggplot(mpg, aes(displ,hwy,col='red')) + geom_point() #ok
ggplot(mpg, aes(displ,hwy)) + geom_point(aes(col='red')) #ok
# 1. что происходит, когда применяется непрерывная переменная (факторная) на size и shape
# 2. что будет, если применить не одну, а две эстетики на графике
# 3. что будет, если использовать trans переменную из выборки на shape
# постройте график зависимости типа привода от размера двигателя и класса. какая будет зависимость?
ggplot(mpg, aes(displ, hwy,
col=class))+geom_point(shape = as.factor(as.numeric(mpg$class)))
# 1. что происходит, когда применяется непрерывная переменная (факторная) на size и shape
# 2. что будет, если применить не одну, а две эстетики на графике
# 3. что будет, если использовать trans переменную из выборки на shape
# постройте график зависимости типа привода от размера двигателя и класса. какая будет зависимость?
ggplot(mpg, aes(displ, hwy,
col=class))+geom_point(shape = as.numeric(as.factor(mpg$class)))
# 1. что происходит, когда применяется непрерывная переменная (факторная) на size и shape
# 2. что будет, если применить не одну, а две эстетики на графике
# 3. что будет, если использовать trans переменную из выборки на shape
# постройте график зависимости типа привода от размера двигателя и класса. какая будет зависимость?
ggplot(mpg, aes(displ, hwy,
col=class))+geom_point(size = as.numeric(as.factor(mpg$class)))
ggplot(mpg, aes(displ, hwy,
col=class))+geom_point(size = as.numeric(as.factor(mpg$class)),
aes(displ, hwy,
col=class))+geom_point(size = as.numeric(as.factor(mpg$cty)))
ggplot(mpg, aes(displ, hwy, color = class))+geom_point(aes(size=year))
View(BOD)
plot(BOD, type='l')
plot(BOD$Time~BOD$demand, type='l')
plot(BOD$demand~BOD$Time, type='l')
plot(BOD, type='l')
plot(BOD$demand~BOD$Time, type='l')
points(BOD$demand~BOD$Time, type = "p", pch = 3)
points(BOD$demand~BOD$Time, type = "p", pch = 18)
ggplot(BOD, aes(Time, demand)) + geom_line() + geom_point()
BOD1 <- BOD
BOD1 <- BOD
BOD1$Time <- factor(BOD1$Time)
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point()
ggplot(BOD, aes(Time, demand)) + geom_line() + geom_point()
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point()
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point() + ylim(0, max(BOD1$demand))
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point()
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point() + ylim(0, max(BOD1$demand))
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point() + expand_limits(y=0)
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point() + ylim(0, max(BOD1$demand))
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point() + expand_limits(y=0)
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point() + expand_limits(y=5)
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point()
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point() + expand_limits(y=5)
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point() + expand_limits(y=0)
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point() + ylim(0, max(BOD1$demand))
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line() + geom_point()
setwd("~/r-basics/code/lec08")
worldpop <- read.csv('worldpop.csv)
worldpop <- read.csv('worldpop.csv')
worldpop
worldpop <- worldpop[-1]
worldpop
worldpop <- read.csv('worldpop.csv')
worldpop <- worldpop[-1,-2]
worldpop
worldpop <- read.csv('worldpop.csv')
worldpop <- worldpop[c(-1,-2)]
worldpop
worldpop <- read.csv('worldpop.csv')
worldpop <- worldpop[c(-2)]
worldpop
worldpop <- read.csv('worldpop.csv')
worldpop
worldpop <- read.csv('worldpop.csv')
worldpop <- worldpop[-1]
worldpop
plot(worldpop, type='l')
points(worldpop, type = "p", pch = 18)
points(worldpop$Population~worldpop$Year, type = "p", pch = 18)
plot(worldpop$Population~worldpop$Year, type='l')
plot(log(worldpop$Population)~worldpop$Year, type='l')
points(worldpop$Population~worldpop$Year, type = "p", pch = 18)
points(log(worldpop$Population)~worldpop$Year, type = "p", pch = 18)
plot(exp(worldpop$Population)~worldpop$Year, type='l')
plot(exp(worldpop$Population)~worldpop$Year, type='l')
plot(log(worldpop$Population)~log(worldpop$Year), type='l')
plot(1/worldpop$Population~1/worldpop$Year, type='l')
points(1/worldpop$Population~1/worldpop$Year, type = "p", pch = 18)
p <- worldpop$Population
plot(log(p/(1-p))~worldpop$Year, type='l')
p <- worldpop$Population
plot(log(p/(1-p))~worldpop$Year, type='l')
plot(sqrt(y)~worldpop$Year, type='l')
p <- worldpop$Population
plot(sqrt(y)~worldpop$Year, type='l')
p <- worldpop$Population
plot(sqrt(p)~worldpop$Year, type='l')
points(sqrt(p)~worldpop$Year, type = "p", pch = 18)
plot(arcsin(p)~worldpop$Year, type='l')
plot(asin(p)~worldpop$Year, type='l')
plot(log(p)~worldpop$Year, type='l')
plot(log(p)~worldpop$Year, type='l')
points(log(p)~worldpop$Year, type = "p", pch = 18)
plot(worldpop$Population~worldpop$Year, type='l')
plot(log(p)~worldpop$Year, type='l')
plot(worldpop$Population~worldpop$Year, type='l')
plot(log(p)~worldpop$Year, type='l')
points(log(p)~worldpop$Year, type = "p", pch = 18)
which(worldpop$Population < 0)
which(worldpop$Time < 0)
which(worldpop$Year < 0)
worldpop$Year[which(worldpop$Year < 0)]
library(dplyr)
filter(worldpop, worldpop$Year < 0)
library(dplyr)
par(mfrow=c(1,2))
wp1 <- filter(worldpop, worldpop$Year < 0)
wp2 <- filter(worldpop, worldpop$Year >= 0)
ggplot(wp1, aes(Year, Population)) + geom_line() + geom_point()
ggplot(wp2, aes(Year, Population)) + geom_line() + geom_point()
library(dplyr)
par(mfrow=c(2,1))
wp1 <- filter(worldpop, worldpop$Year < 0)
wp2 <- filter(worldpop, worldpop$Year >= 0)
ggplot(wp1, aes(Year, Population)) + geom_line() + geom_point()
ggplot(wp2, aes(Year, Population)) + geom_line() + geom_point()
plot(worldpop$Population*(10^9)~worldpop$Year, type='l')
par(mfrow=c(1,1))
plot(worldpop$Population*(10^9)~worldpop$Year, type='l')
plot(worldpop$Population/(10^9)~worldpop$Year, type='l')
ggplot(worldpop, aes(Year, Population)) + geom_line() + geom_point() + scale_y_log10()
worldpop
plot(worldpop$Population~worldpop$Year, type='l')
plot(wp1~wp1$Year, type='l')
library(dplyr)
wp1 <- filter(worldpop, worldpop$Year < 1500)
wp2 <- filter(worldpop, worldpop$Year >= 1500)
plot(wp1~wp1$Year, type='l')
library(dplyr)
library(gridExtra)
par(mfrow=c(1,1))
wp1 <- filter(worldpop, worldpop$Year < 0)
wp2 <- filter(worldpop, worldpop$Year >= 0)
g1 <- ggplot(wp1, aes(Year, Population)) + geom_line() + geom_point()
g2 <- ggplot(wp2, aes(Year, Population)) + geom_line() + geom_point()
grid.arrange(g1,g2,ncol=2)
library(dplyr)
library(gridExtra)
wp1 <- filter(worldpop, worldpop$Year < 1500)
wp2 <- filter(worldpop, worldpop$Year >= 1500)
ggplot(wp1, aes(Year*5000, Population)) + geom_line() + geom_point()
ggplot(wp1, aes(Year, Population)) + geom_line() + geom_point()
ggplot(wp1, aes(Year, Population*5000)) + geom_line() + geom_point()
ggplot(wp1, aes(Year, Population*5000)) + geom_line(wp2, aes(Year, Population)) + geom_point()
library(dplyr)
library(gridExtra)
wp1 <- filter(worldpop, worldpop$Year < 1500)
wp2 <- filter(worldpop, worldpop$Year >= 1500)
ggplot(wp1, aes(Year, Population*5000)) + geom_line(wp2, aes(Year, Population)) + geom_point()
ggplot(wp1, aes(Year, Population*5000)) + geom_line(wp2) + geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_point() +
scale_y_continuous("mpg", sec.axis = sec_axis(~ . *1.2, name="mpg1"))
ggplot(mpg, aes(displ, hwy)) + geom_point() +
scale_y_continuous("mpg", sec_axis = sec_axis(~ . *1.2, name="mpg1"))
ggplot(mpg, aes(displ, hwy)) + geom_point() +
scale_y_continuous("mpg", sec.axis = sec_axis(~ . *1.2, name="mpg1"))
ggplot(mpg, aes(displ, hwy)) + geom_point() +
scale_y_continuous("mpg", sec.axis = sec_axis(~ . *1.2, name="mpg1"))
ggplot(mpg, aes(displ, hwy)) + geom_point() +
scale_y_continuous("mpg", sec.axis = sec_axis(~ . *1.2, name="mpg1"))
ggplot(worldpop, aes(Year, Population)) + geom_point() +
scale_y_continuous("worldpop", sec.axis = sec_axis(trans = ~ . *5000, name="worldpop1")))
ggplot(worldpop, aes(Year, Population)) + geom_point() +
scale_y_continuous("worldpop", sec.axis = sec_axis(trans = ~ . *5000, name="worldpop1"))
ggplot(worldpop, aes(Year, Population)) + geom_point() + geom_line() +
scale_y_continuous("worldpop", sec.axis = sec_axis(trans = ~ . *5000, name="worldpop1"))
curve(x^3~5*x,from = -4, to = 4)
curve(x^3~5*x,from = -4, to = 4)
curve(x^3 ~ 5*x,from = -4, to = 4)
par(mfrow=c(1,1))
curve(x^3 ~ 5*x,from = -4, to = 4)
par(mfrow=c(1,1))
curve(x^3 - 5*x,from = -4, to = 4)
f1 <- function(x) {
1/1+exp(-x+10)
}
curve(f1(x),from = 0, to = 20)
par(mfrow=c(1,1))
curve(x^3 - 5*x,from = -4, to = 4)
f1 <- function(x) {
1/(1+exp(-x+10))
}
curve(f1(x),from = 0, to = 20, add = T)
curve(f1(x),from = 0, to = 20)
par(mfrow=c(1,1))
curve(x^3 - 5*x,from = -4, to = 4)
f1 <- function(x) {
1/(1+exp(-x+10))
}
curve(f1(x),from = 0, to = 20)
curve(inverse(f1(x)),from = 0, to = 20)
curve(1-f1(x),from = 0, to = 20)
f1 <- function(x) {
1/(1+exp(-x+10))
}
curve(f1(x),from = 0, to = 20)
curve(1-f1(x),from = 0, to = 20, add = t)
curve(f1(x),from = 0, to = 20)
curve(1-f1(x),from = 0, to = 20, add = t)
curve(1-f1(x),from = 0, to = 20, add = T)
f1 <- function(x) {
1/(1+exp(-x+10))
}
curve(f1(x),from = 0, to = 20)
curve(1-f1(x),from = 0, to = 20, add = T)
f1 <- function(x) {
1/(1+exp(-x+10))
}
curve(f1(x),from = 0, to = 20)
curve(1-f1(x),from = 0, to = 20, add = T, col = 'blue')
ggplot(data.frame(x=c(0,20)), aes(x=x)) + stat_function(fun = f1, geom = 'line')
ggplot(data.frame(x=c(0,20)), aes(x=x)) + stat_function(fun = f1, geom = 'line') +
stat_function(fun = 1-f1, geom = 'line')
ggplot(data.frame(x=c(0,20)), aes(x=x)) + stat_function(fun = f1, geom = 'line') +
stat_function(fun = (1-f1), geom = 'line')
f2 <- function(x) 1 - f1(x)
ggplot(data.frame(x=c(0,20)), aes(x=x)) + stat_function(fun = f1, geom = 'line') +
stat_function(fun = f2, geom = 'line')
View(tips)
library(readr)
tips <- read_csv("tips.csv")
tips <- read.csv("tips.csv")
View(tips)
tips$X.1 <- NULL
head(tips)
library(readr)
tips <- read.csv("tips.csv")
View(tips)
tips$X.1 <- NULL
tips$X <- NULL
head(tips)
colnames(tips) <- c("Total Bill", "Tip", "Sex of Tipper", "Smoker", "Day", "Meal", "Party Size")
# Добавить столбец Tip persent tip/total_bill
tips %>% mutate(tip_persent=tip/total_bill)
# Добавить столбец Tip persent tip/total_bill
head(tips)
# Добавить столбец Tip persent tip/total_bill
head(tips)
tips %>% mutate(tip_persent=Tip/`Total Bill`)
tips1 <- tips %>% mutate(tip_persent=Tip/`Total Bill`)
tips1
tips %>% mutate(day_number=as.factor(Day))
tips %>% mutate(day_number=as.numeric(as.factor(Day))
tips %>% mutate(day_number=as.numeric(as.factor(Day)))
tips %>% mutate(day_number=isWeekday(Day))
tips$day_number <- ifelse(tips$day=="Sun",7,ifelse(tips$day=="Sat",6,ifelse(tips$day=="Thur",4,5)))
tips$Day_number <- ifelse(tips$Day=="Sun",7,ifelse(tips$Day=="Sat",6,ifelse(tips$Day=="Thur",4,5)))
tips
tips <- tips %>% mutate(Tip_persent=Tip/`Total Bill`)
tips$Day_number <- ifelse(tips$Day=="Sun",7,ifelse(tips$Day=="Sat",6,ifelse(tips$Day=="Thur",4,5)))
tips
tips %>% ggplot(Size~Tip_persent)
tips %>% ggplot(aes(x=Size, y=Tip_persent))
tips %>% ggplot(aes(x='Party Size', y=Tip_persent))
tips %>% ggplot(aes(x=`Party Size`, y=Tip_persent))
tips %>% ggplot(aes(x='Party Size', y=Tip_persent)) + geom_line()
tips %>% ggplot(aes(x=as.numeric('Party Size'), y=Tip_persent)) + geom_line()
as.numeric(tips$`Party Size`)
tips %>% ggplot(aes(x=as.numeric(tips$`Party Size`), y=Tip_persent)) + geom_line()
tips %>% ggplot(aes(x=as.numeric(tips$`Party Size`), y=Tip_persent)) + geom_point()
tips %>% ggplot(aes(x=Tip_persent, y=as.numeric(tips$`Party Size`))) + geom_point()
ggplot(tips, aes(Tip_Percent, total_bill)) + geom_point()
ggplot(tips, aes(Tip_Persent, total_bill)) + geom_point()
ggplot(tips, aes(Tip_persent, total_bill)) + geom_point()
ggplot(tips, aes(Tip_persent, `Total bill`)) + geom_point()
ggplot(tips, aes(Tip_persent, 'Total bill')) + geom_point()
ggplot(tips, aes('Total bill', Tip_persent)) + geom_point()
ggplot(tips, aes('Total bill', as.double(Tip_persent))) + geom_point()
ggplot(tips, aes(as.double('Total bill'), as.double(Tip_persent))) + geom_point()
ggplot(tips, aes(as.double(`Total bill`), as.double(Tip_persent))) + geom_point()
tips <- read.csv("tips.csv")
View(tips)
tips$X.1 <- NULL
tips$X <- NULL
tips$tip_persent <- tips$tip/tips$total_bill
tips$day_number <- ifelse(tips$day=="Sun",7,ifelse(tips$day=="Sat",6,ifelse(tips$day=="Thur",4,5)))
tips
ggplot(tips, aes(x=total_bill, y=tip_persent)) + geom_point()
ggplot(tips, aes(x=total_bill, y=tip_persent)) + geom_point(aes(color = size))
ggplot(tips, aes(x=total_bill, y=tip_persent, col = factor(size))) + geom_point()
ggplot(tips, aes(x=total_bill, y=tip_persent, col = factor(size))) + geom_point(aes(col = factor(time)),
shape = 1) +
geom_smooth()
ggplot(tips, aes(x=total_bill, y=tip_persent)) + geom_point(aes(col = factor(time)),
shape = 1) +
geom_smooth()
hist(tips$tip_persent, breaks = 30, main = , xlab = , col = 'green')
curve(dnorm(x, mean = , sd = ), add = T, col = 'darkblue')
curve(dnorm(x, mean = , sd = ), add = T, col = 'darkblue')
hist(tips$tip_persent, breaks = 30, main = , xlab = , col = 'green')
curve(dnorm(x, mean = , sd = ), add = T, col = 'darkblue')
hist(tips$tip_persent, breaks = 30, main = 'Hist', xlab = 'Tip persent', col = 'green')
curve(dnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
hist(tips$tip_persent, breaks = 30, main = 'Hist', xlab = 'Tip persent', col = 'green')
curve(dnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
tips$tip_persent <- (tips$tip/tips$total_bill)*100
curve(dnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
hist(tips$tip_persent, breaks = 30, main = 'Hist', xlab = 'Tip persent', col = 'green')
curve(dnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
tips$tip_persent <- tips$tip/tips$total_bill*100
hist(tips$tip_persent, breaks = 30, main = 'Hist', xlab = 'Tip persent', col = 'green')
mean(tips$tip_persent)
hist(tips$tip_persent, breaks = 30, main = 'Hist', xlab = 'Tip persent', col = 'green')
curve(rnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
curve(pnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
curve(qnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
curve(dnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
hist(tips$tip_persent, breaks = 30, main = 'Hist', xlab = 'Tip persent', col = 'green')
curve(dnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
sd = sd(tips$tip_persent)
hist(tips$tip_persent, breaks = 30, main = 'Hist', xlab = 'Tip persent', col = 'green')
curve(dnorm(x/100, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
curve(dnorm(x*100, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
curve(dnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
tips$tip_persent <- tips$tip/tips$total_bill
hist(tips$tip_persent, breaks = 30, main = 'Hist', xlab = 'Tip persent', col = 'green')
curve(dnorm(x, mean = mean(tips$tip_persent),
sd = sd(tips$tip_persent)), add = T, col = 'darkblue')
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~class)
# фасетка и группировка
df <- data.frame(
x = rnorm(120, c(0,2,4)),
y = rnorm(120, c(1,2,1)),
z = letters[1:3]
)
ggplot(df, aes(x,y)) +
geom_point(aes(colour = z))
ggplot(df, aes(x,y)) +
geom_point() +
facet_wrap(~z)
df_sum <- df %>% group_by(z) %>%
summarise(x=mean(x), y=mean(y)) %>%
rename(z2=z)
ggplot(df, aes(x,y)) +
geom_point() +
geom_point(data=df_sum, aes(colour = z2), size = 4) +
facet_wrap(~z)
df_sum <- df %>% group_by(z) %>%
summarise(x=mean(x), y=mean(y)) %>%
rename(z2=z)
ggplot(df, aes(x,y)) +
geom_point() +
geom_point(data=df_sum, aes(colour = z2), size = 4) +
facet_wrap(~z)
# возвращаемся к mpg
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~class)
# применим фасетку к hwy
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~hwy)
# возвращаемся к mpg
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~class)
# применим фасетку к hwy
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~as.factor(cyl))
# scales
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~as.factor(cyl), scales = free)
# scales
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~as.factor(cyl), scales = 'free')
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~as.factor(cyl), scales = 'free_x')
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~as.factor(cyl), scales = 'free_y')
# scales
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~as.factor(cyl), scales = 'free')
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~as.factor(cyl), scales = 'free_x')
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~as.factor(cyl), scales = 'free_y')
# scales
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~as.factor(cyl), scales = 'free')
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth() +
facet_wrap(~as.factor(cyl), scales = 'free')
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth()
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(span = 0.2)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(span = c(0.2, 1))
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(span = 1)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(span = 0.2)
library(mgcv)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x))
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x, bs="cs"))
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(method = "lm")
